"""create users and plants

Revision ID: 8ac6552649ef
Revises: 
Create Date: 2025-02-26 18:10:59.105318

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '8ac6552649ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plants',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('bibliography', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column(
                        'slug', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('year', sa.Date(), nullable=False),
                    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column(
                        'family', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'genius', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'rank', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('roles',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column(
                        'password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column(
                        'type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('username', sa.String(
                        length=256), nullable=False),
                    sa.Column(
                        'email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column(
                        'photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_roles',
                    sa.Column('id', sa.Uuid(), nullable=False),
                    sa.Column('user_id', sa.Uuid(), nullable=False),
                    sa.Column('role_id', sa.Uuid(), nullable=False),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('plants')
    # ### end Alembic commands ###
